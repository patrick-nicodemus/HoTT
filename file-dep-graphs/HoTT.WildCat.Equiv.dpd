N: 112 "Build_CatEquiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 117 "CatEquiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 127 "CatEquiv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 115 "CatIsEquiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 126 "CatIsEquiv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 8 "Cat_BiInv_ind" [body=yes, kind=cnst, prop=yes, path="Equiv", ];
N: 7 "Cat_BiInv_rec" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 9 "Cat_BiInv_rect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 6 "Cat_BiInv_sind" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 18 "Cat_IsBiInv_ind" [body=yes, kind=cnst, prop=yes, path="Equiv", ];
N: 17 "Cat_IsBiInv_rec" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 19 "Cat_IsBiInv_rect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 16 "Cat_IsBiInv_sind" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 130 "HasEquivs_ind" [body=yes, kind=cnst, prop=yes, path="Equiv", ];
N: 129 "HasEquivs_rec" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 131 "HasEquivs_rect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 128 "HasEquivs_sind" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 49 "IsUnivalent1Cat_ind" [body=yes, kind=cnst, prop=yes, path="Equiv", ];
N: 48 "IsUnivalent1Cat_rec" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 50 "IsUnivalent1Cat_rect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 47 "IsUnivalent1Cat_sind" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 14 "cat_eisretr" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 2 "cat_eissect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 12 "cat_eissect'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 5 "cat_equiv_fun" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 15 "cat_equiv_inv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 13 "cat_equiv_inv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 4 "cat_equiv_isequiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 53 "cat_equiv_path" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 1 "cat_hasequivs" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 3 "cat_inverses_homotopic" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 45 "cat_path_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 109 "cate_adjointify" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 123 "cate_buildequiv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 111 "cate_buildequiv_fun" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 122 "cate_buildequiv_fun'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 77 "cate_epic_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 116 "cate_fun" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 125 "cate_fun'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 108 "cate_inv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 121 "cate_inv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 64 "cate_inv2" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 61 "cate_inv_V" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 101 "cate_inv_adjointify" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 63 "cate_inv_compose" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 62 "cate_inv_compose'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 102 "cate_inverse_retr" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 103 "cate_inverse_sect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 113 "cate_isequiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 124 "cate_isequiv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 25 "cate_isinitial" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 104 "cate_isretr" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 119 "cate_isretr'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 105 "cate_issect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 120 "cate_issect'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 24 "cate_isterminal" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 78 "cate_monic_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 67 "cate_moveL_1V" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 74 "cate_moveL_Me" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 68 "cate_moveL_V1" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 70 "cate_moveL_Ve" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 76 "cate_moveL_eM" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 72 "cate_moveL_eV" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 65 "cate_moveR_1V" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 73 "cate_moveR_Me" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 66 "cate_moveR_V1" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 69 "cate_moveR_Ve" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 75 "cate_moveR_eM" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 71 "cate_moveR_eV" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 110 "catie_adjointify" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 118 "catie_adjointify'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 96 "catie_homotopic" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 100 "catie_id" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 114 "catisequiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 82 "compose_V_hh" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 91 "compose_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 87 "compose_cate_assoc" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 86 "compose_cate_assoc_opp" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 90 "compose_cate_fun" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 89 "compose_cate_funinv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 85 "compose_cate_idl" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 84 "compose_cate_idr" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 93 "compose_catie" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 92 "compose_catie'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 95 "compose_catie_isretr" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 94 "compose_catie_issect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 79 "compose_hV_h" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 81 "compose_h_Vh" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 80 "compose_hh_V" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 41 "core_ind" [body=yes, kind=cnst, prop=yes, path="Equiv", ];
N: 40 "core_rec" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 42 "core_rect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 39 "core_sind" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 59 "emap" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 57 "emap_compose" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 56 "emap_compose'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 58 "emap_id" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 55 "emap_inv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 54 "emap_inv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 27 "hasequivs_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 107 "hasequivs_op" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 26 "hasmorext_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 99 "id_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 88 "id_cate_fun" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 60 "iemap" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 36 "is01cat_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 34 "is01cat_core_hom" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 32 "is0functor_core_postcomp" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 31 "is0functor_core_precomp" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 29 "is0gpd_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 33 "is0gpd_core_hom" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 30 "is1cat_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 28 "is1gpd_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 35 "is2graph_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 46 "isequiv_cat_equiv_path" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 106 "isequiv_op" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 37 "isgraph_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 23 "isinitial_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 22 "isterminal_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 98 "reflexive_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 97 "symmetric_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 83 "transitive_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 38 "uncore" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 11 "Cat_BiInv" [kind=inductive, prop=no, path="Equiv", ];
N: 21 "Cat_IsBiInv" [kind=inductive, prop=no, path="Equiv", ];
N: 133 "HasEquivs" [kind=inductive, prop=no, path="Equiv", ];
N: 52 "IsUnivalent1Cat" [kind=inductive, prop=no, path="Equiv", ];
N: 44 "core" [kind=inductive, prop=no, path="Equiv", ];
N: 10 "Build_Cat_BiInv" [kind=construct, prop=no, path="Equiv", ];
N: 20 "Build_Cat_IsBiInv" [kind=construct, prop=no, path="Equiv", ];
N: 132 "Build_HasEquivs" [kind=construct, prop=no, path="Equiv", ];
N: 51 "Build_IsUnivalent1Cat" [kind=construct, prop=no, path="Equiv", ];
N: 43 "Build_core" [kind=construct, prop=no, path="Equiv", ];
E: 1 2 [weight=1, ];
E: 1 10 [weight=2, ];
E: 1 11 [weight=14, ];
E: 1 14 [weight=1, ];
E: 1 20 [weight=1, ];
E: 1 21 [weight=7, ];
E: 1 132 [weight=1, ];
E: 1 133 [weight=1, ];
E: 2 3 [weight=1, ];
E: 2 21 [weight=2, ];
E: 3 21 [weight=2, ];
E: 4 11 [weight=2, ];
E: 4 21 [weight=1, ];
E: 5 11 [weight=2, ];
E: 6 10 [weight=2, ];
E: 6 11 [weight=4, ];
E: 6 21 [weight=2, ];
E: 7 9 [weight=1, ];
E: 7 10 [weight=1, ];
E: 7 11 [weight=3, ];
E: 7 21 [weight=1, ];
E: 8 10 [weight=2, ];
E: 8 11 [weight=4, ];
E: 8 21 [weight=2, ];
E: 9 10 [weight=2, ];
E: 9 11 [weight=4, ];
E: 9 21 [weight=2, ];
E: 10 21 [weight=1, ];
E: 11 21 [weight=1, ];
E: 12 21 [weight=2, ];
E: 13 21 [weight=2, ];
E: 14 21 [weight=2, ];
E: 15 21 [weight=2, ];
E: 16 20 [weight=2, ];
E: 16 21 [weight=4, ];
E: 17 19 [weight=1, ];
E: 17 20 [weight=1, ];
E: 17 21 [weight=3, ];
E: 18 20 [weight=2, ];
E: 18 21 [weight=4, ];
E: 19 20 [weight=2, ];
E: 19 21 [weight=4, ];
E: 22 23 [weight=1, ];
E: 22 107 [weight=1, ];
E: 22 117 [weight=1, ];
E: 22 133 [weight=2, ];
E: 23 80 [weight=1, ];
E: 23 108 [weight=4, ];
E: 23 116 [weight=7, ];
E: 23 117 [weight=2, ];
E: 23 133 [weight=2, ];
E: 24 25 [weight=1, ];
E: 24 107 [weight=1, ];
E: 24 117 [weight=1, ];
E: 24 133 [weight=2, ];
E: 25 109 [weight=1, ];
E: 25 117 [weight=1, ];
E: 25 133 [weight=2, ];
E: 26 30 [weight=6, ];
E: 26 33 [weight=4, ];
E: 26 34 [weight=4, ];
E: 26 35 [weight=8, ];
E: 26 36 [weight=2, ];
E: 26 37 [weight=13, ];
E: 26 44 [weight=14, ];
E: 26 116 [weight=44, ];
E: 26 117 [weight=29, ];
E: 26 133 [weight=2, ];
E: 27 30 [weight=12, ];
E: 27 35 [weight=7, ];
E: 27 36 [weight=10, ];
E: 27 37 [weight=45, ];
E: 27 44 [weight=77, ];
E: 27 88 [weight=2, ];
E: 27 90 [weight=2, ];
E: 27 91 [weight=4, ];
E: 27 99 [weight=8, ];
E: 27 104 [weight=1, ];
E: 27 105 [weight=1, ];
E: 27 108 [weight=11, ];
E: 27 116 [weight=21, ];
E: 27 117 [weight=1, ];
E: 27 132 [weight=1, ];
E: 27 133 [weight=3, ];
E: 28 29 [weight=4, ];
E: 28 30 [weight=6, ];
E: 28 35 [weight=4, ];
E: 28 36 [weight=6, ];
E: 28 37 [weight=8, ];
E: 28 44 [weight=12, ];
E: 28 88 [weight=2, ];
E: 28 90 [weight=2, ];
E: 28 91 [weight=4, ];
E: 28 99 [weight=4, ];
E: 28 104 [weight=1, ];
E: 28 105 [weight=1, ];
E: 28 108 [weight=8, ];
E: 28 116 [weight=12, ];
E: 28 117 [weight=2, ];
E: 28 133 [weight=2, ];
E: 29 36 [weight=2, ];
E: 29 37 [weight=4, ];
E: 29 44 [weight=4, ];
E: 29 108 [weight=1, ];
E: 29 133 [weight=2, ];
E: 30 31 [weight=1, ];
E: 30 32 [weight=1, ];
E: 30 33 [weight=1, ];
E: 30 34 [weight=1, ];
E: 30 35 [weight=2, ];
E: 30 36 [weight=2, ];
E: 30 37 [weight=12, ];
E: 30 44 [weight=24, ];
E: 30 84 [weight=1, ];
E: 30 85 [weight=1, ];
E: 30 86 [weight=1, ];
E: 30 87 [weight=1, ];
E: 30 133 [weight=2, ];
E: 31 35 [weight=5, ];
E: 31 36 [weight=2, ];
E: 31 37 [weight=15, ];
E: 31 44 [weight=13, ];
E: 31 90 [weight=2, ];
E: 31 91 [weight=4, ];
E: 31 116 [weight=15, ];
E: 31 133 [weight=2, ];
E: 32 35 [weight=5, ];
E: 32 36 [weight=2, ];
E: 32 37 [weight=15, ];
E: 32 44 [weight=13, ];
E: 32 90 [weight=2, ];
E: 32 91 [weight=4, ];
E: 32 116 [weight=15, ];
E: 32 133 [weight=2, ];
E: 33 34 [weight=2, ];
E: 33 35 [weight=4, ];
E: 33 37 [weight=8, ];
E: 33 44 [weight=8, ];
E: 33 133 [weight=2, ];
E: 34 35 [weight=6, ];
E: 34 37 [weight=12, ];
E: 34 44 [weight=10, ];
E: 34 116 [weight=4, ];
E: 34 133 [weight=2, ];
E: 35 37 [weight=5, ];
E: 35 44 [weight=4, ];
E: 35 116 [weight=2, ];
E: 35 133 [weight=2, ];
E: 36 37 [weight=6, ];
E: 36 44 [weight=10, ];
E: 36 91 [weight=1, ];
E: 36 99 [weight=1, ];
E: 36 133 [weight=2, ];
E: 37 44 [weight=4, ];
E: 37 117 [weight=1, ];
E: 37 133 [weight=2, ];
E: 38 44 [weight=2, ];
E: 39 43 [weight=2, ];
E: 39 44 [weight=4, ];
E: 40 42 [weight=1, ];
E: 40 43 [weight=1, ];
E: 40 44 [weight=3, ];
E: 41 43 [weight=2, ];
E: 41 44 [weight=4, ];
E: 42 43 [weight=2, ];
E: 42 44 [weight=4, ];
E: 45 52 [weight=2, ];
E: 45 117 [weight=1, ];
E: 45 133 [weight=2, ];
E: 46 52 [weight=2, ];
E: 46 53 [weight=1, ];
E: 46 117 [weight=1, ];
E: 46 133 [weight=2, ];
E: 47 51 [weight=2, ];
E: 47 52 [weight=4, ];
E: 47 53 [weight=2, ];
E: 47 117 [weight=2, ];
E: 47 133 [weight=2, ];
E: 48 50 [weight=1, ];
E: 48 51 [weight=1, ];
E: 48 52 [weight=3, ];
E: 48 53 [weight=1, ];
E: 48 117 [weight=1, ];
E: 48 133 [weight=2, ];
E: 49 51 [weight=2, ];
E: 49 52 [weight=4, ];
E: 49 53 [weight=2, ];
E: 49 117 [weight=2, ];
E: 49 133 [weight=2, ];
E: 50 51 [weight=2, ];
E: 50 52 [weight=4, ];
E: 50 53 [weight=2, ];
E: 50 117 [weight=2, ];
E: 50 133 [weight=2, ];
E: 51 53 [weight=1, ];
E: 51 117 [weight=1, ];
E: 51 133 [weight=1, ];
E: 52 53 [weight=1, ];
E: 52 117 [weight=1, ];
E: 52 133 [weight=1, ];
E: 53 98 [weight=1, ];
E: 53 117 [weight=2, ];
E: 53 133 [weight=2, ];
E: 54 55 [weight=1, ];
E: 54 59 [weight=3, ];
E: 54 60 [weight=1, ];
E: 54 108 [weight=7, ];
E: 54 111 [weight=1, ];
E: 54 116 [weight=6, ];
E: 54 117 [weight=2, ];
E: 54 133 [weight=4, ];
E: 55 59 [weight=3, ];
E: 55 60 [weight=2, ];
E: 55 101 [weight=1, ];
E: 55 104 [weight=2, ];
E: 55 105 [weight=2, ];
E: 55 108 [weight=40, ];
E: 55 109 [weight=1, ];
E: 55 111 [weight=1, ];
E: 55 112 [weight=1, ];
E: 55 116 [weight=69, ];
E: 55 117 [weight=2, ];
E: 55 133 [weight=4, ];
E: 56 57 [weight=1, ];
E: 56 59 [weight=14, ];
E: 56 60 [weight=4, ];
E: 56 90 [weight=1, ];
E: 56 91 [weight=6, ];
E: 56 111 [weight=2, ];
E: 56 112 [weight=2, ];
E: 56 116 [weight=22, ];
E: 56 117 [weight=4, ];
E: 56 133 [weight=4, ];
E: 57 59 [weight=1, ];
E: 57 60 [weight=2, ];
E: 57 90 [weight=1, ];
E: 57 91 [weight=8, ];
E: 57 111 [weight=1, ];
E: 57 112 [weight=1, ];
E: 57 116 [weight=19, ];
E: 57 117 [weight=4, ];
E: 57 133 [weight=4, ];
E: 58 59 [weight=1, ];
E: 58 60 [weight=2, ];
E: 58 88 [weight=2, ];
E: 58 99 [weight=13, ];
E: 58 111 [weight=1, ];
E: 58 112 [weight=1, ];
E: 58 116 [weight=12, ];
E: 58 133 [weight=4, ];
E: 59 60 [weight=1, ];
E: 59 112 [weight=1, ];
E: 59 116 [weight=1, ];
E: 59 117 [weight=3, ];
E: 59 133 [weight=4, ];
E: 60 104 [weight=1, ];
E: 60 105 [weight=1, ];
E: 60 108 [weight=15, ];
E: 60 110 [weight=1, ];
E: 60 115 [weight=1, ];
E: 60 116 [weight=31, ];
E: 60 117 [weight=2, ];
E: 60 133 [weight=4, ];
E: 61 66 [weight=1, ];
E: 61 105 [weight=1, ];
E: 61 108 [weight=4, ];
E: 61 116 [weight=5, ];
E: 61 117 [weight=2, ];
E: 61 133 [weight=2, ];
E: 62 63 [weight=1, ];
E: 62 91 [weight=2, ];
E: 62 93 [weight=2, ];
E: 62 108 [weight=14, ];
E: 62 111 [weight=1, ];
E: 62 112 [weight=1, ];
E: 62 116 [weight=11, ];
E: 62 117 [weight=4, ];
E: 62 133 [weight=2, ];
E: 63 90 [weight=1, ];
E: 63 91 [weight=5, ];
E: 63 94 [weight=1, ];
E: 63 95 [weight=1, ];
E: 63 101 [weight=1, ];
E: 63 108 [weight=16, ];
E: 63 116 [weight=13, ];
E: 63 117 [weight=4, ];
E: 63 133 [weight=2, ];
E: 64 68 [weight=1, ];
E: 64 104 [weight=1, ];
E: 64 108 [weight=6, ];
E: 64 116 [weight=16, ];
E: 64 117 [weight=4, ];
E: 64 133 [weight=2, ];
E: 65 66 [weight=1, ];
E: 65 107 [weight=1, ];
E: 65 108 [weight=1, ];
E: 65 116 [weight=3, ];
E: 65 117 [weight=2, ];
E: 65 133 [weight=2, ];
E: 66 78 [weight=1, ];
E: 66 104 [weight=1, ];
E: 66 108 [weight=3, ];
E: 66 116 [weight=7, ];
E: 66 117 [weight=2, ];
E: 66 133 [weight=2, ];
E: 67 68 [weight=1, ];
E: 67 107 [weight=1, ];
E: 67 108 [weight=1, ];
E: 67 116 [weight=3, ];
E: 67 117 [weight=2, ];
E: 67 133 [weight=2, ];
E: 68 78 [weight=1, ];
E: 68 104 [weight=1, ];
E: 68 108 [weight=4, ];
E: 68 116 [weight=9, ];
E: 68 117 [weight=2, ];
E: 68 133 [weight=2, ];
E: 69 71 [weight=1, ];
E: 69 107 [weight=1, ];
E: 69 108 [weight=1, ];
E: 69 116 [weight=3, ];
E: 69 117 [weight=2, ];
E: 69 133 [weight=2, ];
E: 70 72 [weight=1, ];
E: 70 107 [weight=1, ];
E: 70 108 [weight=1, ];
E: 70 116 [weight=3, ];
E: 70 117 [weight=2, ];
E: 70 133 [weight=2, ];
E: 71 77 [weight=1, ];
E: 71 79 [weight=1, ];
E: 71 108 [weight=3, ];
E: 71 116 [weight=7, ];
E: 71 117 [weight=2, ];
E: 71 133 [weight=2, ];
E: 72 77 [weight=1, ];
E: 72 79 [weight=1, ];
E: 72 108 [weight=4, ];
E: 72 116 [weight=9, ];
E: 72 117 [weight=2, ];
E: 72 133 [weight=2, ];
E: 73 75 [weight=1, ];
E: 73 107 [weight=1, ];
E: 73 108 [weight=2, ];
E: 73 116 [weight=3, ];
E: 73 117 [weight=2, ];
E: 73 133 [weight=2, ];
E: 74 76 [weight=1, ];
E: 74 107 [weight=1, ];
E: 74 108 [weight=2, ];
E: 74 116 [weight=3, ];
E: 74 117 [weight=2, ];
E: 74 133 [weight=2, ];
E: 75 77 [weight=1, ];
E: 75 80 [weight=1, ];
E: 75 108 [weight=5, ];
E: 75 116 [weight=7, ];
E: 75 117 [weight=2, ];
E: 75 133 [weight=2, ];
E: 76 77 [weight=1, ];
E: 76 80 [weight=1, ];
E: 76 108 [weight=6, ];
E: 76 116 [weight=9, ];
E: 76 117 [weight=2, ];
E: 76 133 [weight=2, ];
E: 77 78 [weight=1, ];
E: 77 107 [weight=1, ];
E: 77 116 [weight=1, ];
E: 77 117 [weight=2, ];
E: 77 133 [weight=2, ];
E: 78 82 [weight=2, ];
E: 78 108 [weight=5, ];
E: 78 116 [weight=15, ];
E: 78 117 [weight=2, ];
E: 78 133 [weight=2, ];
E: 79 105 [weight=1, ];
E: 79 108 [weight=6, ];
E: 79 116 [weight=12, ];
E: 79 117 [weight=2, ];
E: 79 133 [weight=2, ];
E: 80 104 [weight=1, ];
E: 80 108 [weight=6, ];
E: 80 116 [weight=12, ];
E: 80 117 [weight=2, ];
E: 80 133 [weight=2, ];
E: 81 104 [weight=1, ];
E: 81 108 [weight=6, ];
E: 81 116 [weight=12, ];
E: 81 117 [weight=2, ];
E: 81 133 [weight=2, ];
E: 82 105 [weight=1, ];
E: 82 108 [weight=6, ];
E: 82 116 [weight=12, ];
E: 82 117 [weight=2, ];
E: 82 133 [weight=2, ];
E: 83 91 [weight=1, ];
E: 83 117 [weight=3, ];
E: 83 133 [weight=2, ];
E: 84 85 [weight=1, ];
E: 84 91 [weight=1, ];
E: 84 99 [weight=1, ];
E: 84 107 [weight=1, ];
E: 84 116 [weight=2, ];
E: 84 117 [weight=2, ];
E: 84 133 [weight=2, ];
E: 85 90 [weight=1, ];
E: 85 91 [weight=3, ];
E: 85 99 [weight=5, ];
E: 85 100 [weight=2, ];
E: 85 111 [weight=1, ];
E: 85 112 [weight=1, ];
E: 85 116 [weight=12, ];
E: 85 117 [weight=2, ];
E: 85 133 [weight=2, ];
E: 86 87 [weight=1, ];
E: 86 91 [weight=4, ];
E: 86 107 [weight=1, ];
E: 86 116 [weight=2, ];
E: 86 117 [weight=6, ];
E: 86 133 [weight=2, ];
E: 87 89 [weight=2, ];
E: 87 90 [weight=2, ];
E: 87 91 [weight=21, ];
E: 87 116 [weight=36, ];
E: 87 117 [weight=6, ];
E: 87 133 [weight=2, ];
E: 88 99 [weight=1, ];
E: 88 100 [weight=1, ];
E: 88 111 [weight=1, ];
E: 88 116 [weight=1, ];
E: 88 133 [weight=2, ];
E: 89 91 [weight=2, ];
E: 89 93 [weight=1, ];
E: 89 111 [weight=1, ];
E: 89 116 [weight=8, ];
E: 89 117 [weight=4, ];
E: 89 133 [weight=2, ];
E: 90 91 [weight=1, ];
E: 90 93 [weight=1, ];
E: 90 111 [weight=1, ];
E: 90 116 [weight=5, ];
E: 90 117 [weight=4, ];
E: 90 133 [weight=2, ];
E: 91 93 [weight=1, ];
E: 91 112 [weight=1, ];
E: 91 116 [weight=2, ];
E: 91 117 [weight=5, ];
E: 91 133 [weight=2, ];
E: 92 93 [weight=1, ];
E: 92 96 [weight=1, ];
E: 92 111 [weight=2, ];
E: 92 112 [weight=6, ];
E: 92 115 [weight=5, ];
E: 92 116 [weight=4, ];
E: 92 133 [weight=2, ];
E: 93 94 [weight=1, ];
E: 93 95 [weight=1, ];
E: 93 108 [weight=2, ];
E: 93 110 [weight=1, ];
E: 93 115 [weight=1, ];
E: 93 116 [weight=6, ];
E: 93 117 [weight=4, ];
E: 93 133 [weight=2, ];
E: 94 95 [weight=1, ];
E: 94 107 [weight=1, ];
E: 94 108 [weight=2, ];
E: 94 116 [weight=4, ];
E: 94 117 [weight=4, ];
E: 94 133 [weight=2, ];
E: 95 104 [weight=2, ];
E: 95 108 [weight=31, ];
E: 95 116 [weight=56, ];
E: 95 117 [weight=4, ];
E: 95 133 [weight=2, ];
E: 96 104 [weight=1, ];
E: 96 105 [weight=1, ];
E: 96 108 [weight=13, ];
E: 96 110 [weight=1, ];
E: 96 111 [weight=2, ];
E: 96 112 [weight=21, ];
E: 96 115 [weight=3, ];
E: 96 116 [weight=19, ];
E: 96 133 [weight=2, ];
E: 97 108 [weight=1, ];
E: 97 117 [weight=2, ];
E: 97 133 [weight=2, ];
E: 98 99 [weight=1, ];
E: 98 117 [weight=1, ];
E: 98 133 [weight=2, ];
E: 99 100 [weight=1, ];
E: 99 112 [weight=1, ];
E: 99 117 [weight=1, ];
E: 99 133 [weight=2, ];
E: 100 110 [weight=1, ];
E: 100 115 [weight=1, ];
E: 100 133 [weight=2, ];
E: 101 103 [weight=1, ];
E: 101 108 [weight=1, ];
E: 101 109 [weight=2, ];
E: 101 110 [weight=3, ];
E: 101 111 [weight=1, ];
E: 101 112 [weight=2, ];
E: 101 116 [weight=3, ];
E: 101 133 [weight=2, ];
E: 102 103 [weight=1, ];
E: 102 107 [weight=1, ];
E: 102 108 [weight=1, ];
E: 102 116 [weight=3, ];
E: 102 117 [weight=2, ];
E: 102 133 [weight=2, ];
E: 103 105 [weight=1, ];
E: 103 108 [weight=14, ];
E: 103 116 [weight=24, ];
E: 103 117 [weight=2, ];
E: 103 133 [weight=2, ];
E: 104 105 [weight=1, ];
E: 104 107 [weight=1, ];
E: 104 108 [weight=1, ];
E: 104 116 [weight=2, ];
E: 104 117 [weight=2, ];
E: 104 133 [weight=2, ];
E: 105 108 [weight=3, ];
E: 105 110 [weight=1, ];
E: 105 116 [weight=7, ];
E: 105 117 [weight=2, ];
E: 105 133 [weight=2, ];
E: 106 107 [weight=1, ];
E: 106 115 [weight=3, ];
E: 106 133 [weight=2, ];
E: 107 110 [weight=1, ];
E: 107 115 [weight=6, ];
E: 107 117 [weight=14, ];
E: 107 132 [weight=1, ];
E: 107 133 [weight=3, ];
E: 108 109 [weight=1, ];
E: 108 116 [weight=1, ];
E: 108 117 [weight=3, ];
E: 108 133 [weight=2, ];
E: 109 110 [weight=1, ];
E: 109 112 [weight=1, ];
E: 109 117 [weight=1, ];
E: 109 133 [weight=2, ];
E: 110 115 [weight=1, ];
E: 110 133 [weight=2, ];
E: 111 112 [weight=1, ];
E: 111 115 [weight=2, ];
E: 111 116 [weight=1, ];
E: 111 133 [weight=2, ];
E: 112 115 [weight=2, ];
E: 112 117 [weight=1, ];
E: 112 133 [weight=2, ];
E: 113 115 [weight=1, ];
E: 113 116 [weight=1, ];
E: 113 117 [weight=2, ];
E: 113 133 [weight=2, ];
E: 114 115 [weight=2, ];
E: 114 133 [weight=2, ];
E: 115 133 [weight=2, ];
E: 116 117 [weight=2, ];
E: 116 133 [weight=2, ];
E: 117 133 [weight=2, ];
E: 118 133 [weight=2, ];
E: 119 133 [weight=2, ];
E: 120 133 [weight=2, ];
E: 121 133 [weight=2, ];
E: 122 133 [weight=2, ];
E: 123 133 [weight=2, ];
E: 124 133 [weight=2, ];
E: 125 133 [weight=2, ];
E: 126 133 [weight=2, ];
E: 127 133 [weight=2, ];
E: 128 132 [weight=2, ];
E: 128 133 [weight=4, ];
E: 129 131 [weight=1, ];
E: 129 132 [weight=1, ];
E: 129 133 [weight=3, ];
E: 130 132 [weight=2, ];
E: 130 133 [weight=4, ];
E: 131 132 [weight=2, ];
E: 131 133 [weight=4, ];
