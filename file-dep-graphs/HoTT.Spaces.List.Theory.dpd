N: 27 "Build_list" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 106 "app_assoc" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 107 "app_nil" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 1 "decidable_exists_bounded_nat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 2 "decidable_exists_nat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 7 "decidable_for_all" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 6 "decidable_list_exists" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 66 "drop" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 65 "drop_0" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 64 "drop_1" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 60 "drop_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 62 "drop_length_leq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 63 "drop_nil" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 103 "equiv_inlist_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 102 "fold_left_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 13 "fold_left_preserves" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 101 "fold_right_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 19 "for_all_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 17 "for_all_list_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 16 "for_all_list_map'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 15 "for_all_list_map2" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 14 "for_all_list_map2'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 10 "for_all_repeat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 75 "index_of" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 43 "inlist_filter" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 18 "inlist_for_all" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 5 "inlist_list_exists" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 99 "inlist_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 98 "inlist_map'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 93 "inlist_map2" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 78 "inlist_nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 20 "inlist_repeat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 28 "inlist_seq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 12 "istrunc_for_all" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 11 "istrunc_for_all'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 67 "last_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 108 "length_0" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 26 "length_Build_list" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 104 "length_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 61 "length_drop" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 100 "length_list_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 94 "length_list_map2" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 23 "length_list_restrict" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 8 "length_list_sigma" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 46 "length_remove" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 21 "length_repeat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 89 "length_reverse" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 90 "length_reverse_acc" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 40 "length_seq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 34 "length_seq'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 41 "length_seq_rev" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 35 "length_seq_rev'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 55 "length_take" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 54 "length_take_leq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 4 "list_exists_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 3 "list_exists_seq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 44 "list_filter" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 42 "list_filter_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 92 "list_map2_repeat_l" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 91 "list_map2_repeat_r" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 97 "list_map_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 95 "list_map_compose" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 96 "list_map_id" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 87 "list_map_reverse" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 88 "list_map_reverse_acc" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 105 "list_pentagon" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 24 "list_restrict" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 9 "list_sigma" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 81 "nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 25 "nth'_Build_list" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 76 "nth'_cons" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 73 "nth'_list_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 72 "nth'_list_map2" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 22 "nth'_list_restrict" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 80 "nth'_nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 79 "nth'_path_list" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 71 "nth'_repeat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 29 "nth'_seq'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 69 "nth_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 68 "nth_last" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 74 "nth_list_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 82 "nth_lt" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 77 "nth_nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 30 "nth_seq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 31 "nth_seq_rev" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 70 "path_list_nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 49 "remove" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 48 "remove_0" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 45 "remove_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 47 "remove_length_leq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 86 "reverse_acc_cons" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 84 "reverse_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 85 "reverse_cons" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 83 "reverse_reverse" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 36 "seq'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 37 "seq_rev'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 39 "seq_rev_cons" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 33 "seq_rev_seq_rev'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 32 "seq_seq'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 38 "seq_succ" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 59 "take" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 58 "take_0" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 50 "take_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 51 "take_comm" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 53 "take_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 56 "take_length_leq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 57 "take_nil" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 52 "take_take_min" [body=yes, kind=cnst, prop=no, path="Theory", ];
E: 1 2 [weight=1, ];
E: 2 3 [weight=1, ];
E: 2 6 [weight=1, ];
E: 3 4 [weight=1, ];
E: 3 5 [weight=1, ];
E: 3 28 [weight=2, ];
E: 8 9 [weight=5, ];
E: 11 12 [weight=1, ];
E: 11 19 [weight=1, ];
E: 16 17 [weight=1, ];
E: 22 23 [weight=4, ];
E: 22 24 [weight=11, ];
E: 22 29 [weight=1, ];
E: 22 34 [weight=4, ];
E: 22 36 [weight=16, ];
E: 22 73 [weight=1, ];
E: 22 81 [weight=4, ];
E: 23 24 [weight=1, ];
E: 23 26 [weight=1, ];
E: 24 27 [weight=1, ];
E: 25 27 [weight=3, ];
E: 25 29 [weight=2, ];
E: 25 34 [weight=8, ];
E: 25 36 [weight=23, ];
E: 25 73 [weight=1, ];
E: 25 81 [weight=7, ];
E: 26 27 [weight=1, ];
E: 26 34 [weight=1, ];
E: 26 36 [weight=3, ];
E: 26 100 [weight=1, ];
E: 27 36 [weight=1, ];
E: 28 38 [weight=1, ];
E: 28 103 [weight=1, ];
E: 29 30 [weight=1, ];
E: 29 32 [weight=8, ];
E: 29 34 [weight=1, ];
E: 29 36 [weight=54, ];
E: 29 73 [weight=1, ];
E: 29 77 [weight=1, ];
E: 29 81 [weight=11, ];
E: 29 100 [weight=12, ];
E: 30 38 [weight=1, ];
E: 30 40 [weight=2, ];
E: 30 67 [weight=1, ];
E: 30 68 [weight=1, ];
E: 30 69 [weight=1, ];
E: 30 104 [weight=1, ];
E: 32 33 [weight=1, ];
E: 32 36 [weight=1, ];
E: 32 37 [weight=4, ];
E: 32 88 [weight=1, ];
E: 33 37 [weight=10, ];
E: 33 95 [weight=1, ];
E: 34 35 [weight=1, ];
E: 34 36 [weight=1, ];
E: 34 37 [weight=3, ];
E: 34 89 [weight=1, ];
E: 35 37 [weight=4, ];
E: 35 100 [weight=1, ];
E: 36 37 [weight=1, ];
E: 38 85 [weight=1, ];
E: 40 41 [weight=1, ];
E: 40 89 [weight=1, ];
E: 42 44 [weight=28, ];
E: 43 44 [weight=19, ];
E: 45 49 [weight=2, ];
E: 45 53 [weight=1, ];
E: 45 59 [weight=4, ];
E: 45 60 [weight=1, ];
E: 45 66 [weight=4, ];
E: 45 103 [weight=2, ];
E: 46 49 [weight=2, ];
E: 46 55 [weight=1, ];
E: 46 59 [weight=4, ];
E: 46 61 [weight=1, ];
E: 46 66 [weight=5, ];
E: 46 104 [weight=1, ];
E: 47 49 [weight=2, ];
E: 47 56 [weight=1, ];
E: 47 59 [weight=1, ];
E: 47 62 [weight=1, ];
E: 47 66 [weight=2, ];
E: 47 107 [weight=1, ];
E: 48 49 [weight=2, ];
E: 49 59 [weight=1, ];
E: 49 66 [weight=1, ];
E: 50 59 [weight=15, ];
E: 51 52 [weight=2, ];
E: 51 59 [weight=16, ];
E: 52 57 [weight=2, ];
E: 52 59 [weight=26, ];
E: 53 57 [weight=1, ];
E: 53 59 [weight=12, ];
E: 54 55 [weight=1, ];
E: 54 59 [weight=3, ];
E: 55 57 [weight=1, ];
E: 55 59 [weight=7, ];
E: 56 57 [weight=1, ];
E: 56 59 [weight=7, ];
E: 57 59 [weight=2, ];
E: 58 59 [weight=2, ];
E: 60 63 [weight=1, ];
E: 60 66 [weight=10, ];
E: 61 63 [weight=1, ];
E: 61 66 [weight=5, ];
E: 62 63 [weight=1, ];
E: 62 66 [weight=6, ];
E: 63 66 [weight=3, ];
E: 64 66 [weight=2, ];
E: 65 66 [weight=2, ];
E: 70 76 [weight=2, ];
E: 70 81 [weight=32, ];
E: 71 81 [weight=5, ];
E: 72 76 [weight=3, ];
E: 72 81 [weight=55, ];
E: 73 81 [weight=11, ];
E: 75 76 [weight=1, ];
E: 75 81 [weight=17, ];
E: 76 77 [weight=2, ];
E: 76 81 [weight=8, ];
E: 77 81 [weight=1, ];
E: 77 82 [weight=1, ];
E: 78 81 [weight=10, ];
E: 79 80 [weight=1, ];
E: 79 81 [weight=4, ];
E: 80 81 [weight=3, ];
E: 81 82 [weight=1, ];
E: 83 84 [weight=1, ];
E: 83 85 [weight=1, ];
E: 84 85 [weight=2, ];
E: 84 106 [weight=1, ];
E: 84 107 [weight=1, ];
E: 85 86 [weight=1, ];
E: 85 106 [weight=1, ];
E: 86 106 [weight=1, ];
E: 87 88 [weight=1, ];
E: 89 90 [weight=1, ];
E: 105 106 [weight=116, ];
