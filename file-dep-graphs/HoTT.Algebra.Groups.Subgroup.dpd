N: 84 "Build_IsNormalSubgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 152 "Build_IsSubgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 135 "Build_Subgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 62 "IsMaximalSubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 96 "IsNormalSubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 50 "IsSimpleGroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 160 "IsSubgroup_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 159 "IsSubgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 161 "IsSubgroup_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 158 "IsSubgroup_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 72 "IsTrivialGroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 91 "NormalSubgroup_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 90 "NormalSubgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 92 "NormalSubgroup_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 89 "NormalSubgroup_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 141 "Subgroup_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 140 "Subgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 142 "Subgroup_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 139 "Subgroup_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 4 "equiv_grp_kernel_corec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 80 "equiv_in_cosetL_in_cosetR_normalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 100 "equiv_in_cosetL_symm" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 99 "equiv_in_cosetR_symm" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 82 "equiv_isnormal_conjugate" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 1 "equiv_istrivial_kernel_isembedding" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 123 "equiv_path_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 122 "equiv_path_subgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 98 "equiv_sigma_in_cosetL_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 97 "equiv_sigma_in_cosetR_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 115 "equiv_subgroup_corec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 20 "equiv_subgroup_group" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 125 "equiv_subgroup_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 124 "equiv_subgroup_op_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 86 "equiv_symmetric_in_normalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 34 "functor_subgroup_generated" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 114 "functor_subgroup_group" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 25 "functor_subgroup_product" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 17 "grp_homo_image_in" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 117 "grp_homo_restr" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 11 "grp_homo_subgroup_image_in" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 19 "grp_image" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 16 "grp_image_embedding" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 18 "grp_image_in" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 15 "grp_image_in_embedding" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 81 "grp_iso_normal_conj" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 113 "grp_iso_subgroup_group" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 64 "grp_iso_subgroup_group_maximal" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 67 "grp_iso_trivial_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 6 "grp_kernel" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 5 "grp_kernel_corec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 8 "iff_subgroup_image_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 112 "in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 77 "in_cosetL_cong" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 79 "in_cosetL_inverse" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 102 "in_cosetL_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 111 "in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 76 "in_cosetR_cong" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 78 "in_cosetR_inverse" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 101 "in_cosetR_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 49 "is_simple_group" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 3 "isembedding_istrivial_kernel" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 118 "isembedding_subgroup_incl" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 126 "isequiv_subgroup_in_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 110 "ishprop_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 109 "ishprop_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 60 "ishprop_ismaximalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 83 "ishprop_isnormalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 146 "ishprop_issubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 70 "ishprop_istrivialgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 121 "ishset_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 14 "ismaximal_image_issurj" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 61 "ismaximalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 59 "ismaximalsubgroup_maximalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 95 "isnormal" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 85 "isnormal_conj" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 63 "isnormal_maximal_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 56 "isnormal_subgroup_grp_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 7 "isnormal_subgroup_image" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 52 "isnormal_subgroup_preimage" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 27 "isnormal_subgroup_product" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 73 "isnormal_trivial_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 153 "issig_issubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 136 "issig_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 145 "issubgroup_equiv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 58 "issubgroup_grp_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 154 "issubgroup_in_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 150 "issubgroup_in_inv'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 149 "issubgroup_in_inv_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 155 "issubgroup_in_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 151 "issubgroup_in_op_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 148 "issubgroup_in_op_l" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 147 "issubgroup_in_op_r" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 156 "issubgroup_in_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 157 "issubgroup_predicate" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 54 "issubgroup_preimage" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 10 "issurj_grp_homo_subgroup_image_in" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 66 "istrivial_grp_iso" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 68 "istrivial_iff_grp_iso_trivial" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 2 "istrivial_kernel_isembedding" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 69 "istrivial_trivial_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 71 "istrivialgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 65 "maximal_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 55 "normalsubgroup_grp_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 87 "normalsubgroup_isnormal" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 26 "normalsubgroup_product" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 88 "normalsubgroup_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 21 "path_subgroup_generated" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 22 "path_subgroup_generated_helper" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 108 "reflexive_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 107 "reflexive_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 40 "sgt_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 39 "sgt_inv'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 38 "sgt_op'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 116 "subgroup_corec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 33 "subgroup_eq_functor_subgroup_generated" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 24 "subgroup_eq_functor_subgroup_product" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 23 "subgroup_eq_product_grp_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 32 "subgroup_eq_subgroup_generated_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 37 "subgroup_generated" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 36 "subgroup_generated_gen_incl" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 35 "subgroup_generated_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 43 "subgroup_generated_type_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 42 "subgroup_generated_type_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 44 "subgroup_generated_type_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 41 "subgroup_generated_type_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 120 "subgroup_group" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 57 "subgroup_grp_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 13 "subgroup_image" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 12 "subgroup_image_in" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 9 "subgroup_image_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 133 "subgroup_in_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 132 "subgroup_in_inv'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 129 "subgroup_in_inv_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 131 "subgroup_in_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 130 "subgroup_in_op_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 128 "subgroup_in_op_l" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 127 "subgroup_in_op_r" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 134 "subgroup_in_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 119 "subgroup_incl" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 51 "subgroup_intersection" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 137 "subgroup_issubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 138 "subgroup_pred" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 53 "subgroup_preimage" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 31 "subgroup_product" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 29 "subgroup_product_incl_l" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 28 "subgroup_product_incl_r" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 30 "subgroup_product_ind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 106 "symmetric_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 105 "symmetric_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 104 "transitive_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 103 "transitive_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 75 "trivial_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 74 "trivial_subgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 163 "IsSubgroup" [kind=inductive, prop=no, path="Subgroup", ];
N: 94 "NormalSubgroup" [kind=inductive, prop=no, path="Subgroup", ];
N: 144 "Subgroup" [kind=inductive, prop=no, path="Subgroup", ];
N: 48 "subgroup_generated_type" [kind=inductive, prop=no, path="Subgroup", ];
N: 162 "Build_IsSubgroup" [kind=construct, prop=no, path="Subgroup", ];
N: 93 "Build_NormalSubgroup" [kind=construct, prop=no, path="Subgroup", ];
N: 143 "Build_Subgroup" [kind=construct, prop=no, path="Subgroup", ];
N: 47 "sgt_in" [kind=construct, prop=no, path="Subgroup", ];
N: 46 "sgt_unit" [kind=construct, prop=no, path="Subgroup", ];
N: 45 "sgt_op" [kind=construct, prop=no, path="Subgroup", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 6 [weight=6, ];
E: 1 70 [weight=1, ];
E: 1 72 [weight=5, ];
E: 2 6 [weight=3, ];
E: 2 72 [weight=2, ];
E: 3 6 [weight=3, ];
E: 3 72 [weight=2, ];
E: 4 6 [weight=2, ];
E: 4 115 [weight=1, ];
E: 4 120 [weight=1, ];
E: 5 6 [weight=2, ];
E: 5 116 [weight=1, ];
E: 5 120 [weight=1, ];
E: 6 52 [weight=1, ];
E: 6 53 [weight=1, ];
E: 6 73 [weight=1, ];
E: 6 75 [weight=2, ];
E: 6 93 [weight=1, ];
E: 6 94 [weight=1, ];
E: 7 9 [weight=1, ];
E: 7 12 [weight=1, ];
E: 7 13 [weight=5, ];
E: 7 53 [weight=1, ];
E: 7 84 [weight=1, ];
E: 7 85 [weight=1, ];
E: 7 96 [weight=3, ];
E: 7 117 [weight=1, ];
E: 7 120 [weight=2, ];
E: 7 144 [weight=2, ];
E: 8 9 [weight=1, ];
E: 8 13 [weight=4, ];
E: 8 53 [weight=3, ];
E: 8 117 [weight=2, ];
E: 8 120 [weight=4, ];
E: 8 144 [weight=4, ];
E: 9 13 [weight=1, ];
E: 9 117 [weight=4, ];
E: 9 120 [weight=5, ];
E: 9 144 [weight=4, ];
E: 10 11 [weight=1, ];
E: 10 13 [weight=1, ];
E: 10 117 [weight=1, ];
E: 10 120 [weight=3, ];
E: 10 144 [weight=2, ];
E: 11 12 [weight=1, ];
E: 11 13 [weight=2, ];
E: 11 114 [weight=1, ];
E: 11 120 [weight=2, ];
E: 11 144 [weight=2, ];
E: 12 13 [weight=1, ];
E: 12 117 [weight=3, ];
E: 12 120 [weight=2, ];
E: 12 144 [weight=2, ];
E: 13 19 [weight=1, ];
E: 13 117 [weight=1, ];
E: 13 120 [weight=1, ];
E: 13 144 [weight=3, ];
E: 14 18 [weight=1, ];
E: 14 19 [weight=2, ];
E: 14 62 [weight=1, ];
E: 15 16 [weight=16, ];
E: 15 116 [weight=5, ];
E: 15 120 [weight=6, ];
E: 16 143 [weight=1, ];
E: 16 144 [weight=1, ];
E: 16 162 [weight=1, ];
E: 17 18 [weight=1, ];
E: 17 19 [weight=2, ];
E: 17 116 [weight=1, ];
E: 17 120 [weight=1, ];
E: 18 19 [weight=1, ];
E: 19 135 [weight=1, ];
E: 19 144 [weight=1, ];
E: 20 120 [weight=5, ];
E: 20 144 [weight=7, ];
E: 21 22 [weight=2, ];
E: 21 37 [weight=8, ];
E: 21 122 [weight=1, ];
E: 21 144 [weight=1, ];
E: 22 44 [weight=1, ];
E: 22 45 [weight=1, ];
E: 22 46 [weight=1, ];
E: 22 47 [weight=1, ];
E: 22 48 [weight=27, ];
E: 23 31 [weight=2, ];
E: 23 32 [weight=1, ];
E: 23 57 [weight=7, ];
E: 23 144 [weight=4, ];
E: 24 31 [weight=2, ];
E: 24 33 [weight=1, ];
E: 24 144 [weight=8, ];
E: 25 31 [weight=2, ];
E: 25 34 [weight=1, ];
E: 25 144 [weight=8, ];
E: 26 27 [weight=1, ];
E: 26 31 [weight=1, ];
E: 26 93 [weight=1, ];
E: 26 94 [weight=5, ];
E: 27 31 [weight=2, ];
E: 27 34 [weight=1, ];
E: 27 84 [weight=1, ];
E: 27 85 [weight=2, ];
E: 27 96 [weight=5, ];
E: 27 144 [weight=4, ];
E: 28 31 [weight=1, ];
E: 28 47 [weight=1, ];
E: 28 48 [weight=5, ];
E: 28 144 [weight=4, ];
E: 29 31 [weight=1, ];
E: 29 47 [weight=1, ];
E: 29 48 [weight=5, ];
E: 29 144 [weight=4, ];
E: 30 31 [weight=6, ];
E: 30 44 [weight=1, ];
E: 30 45 [weight=2, ];
E: 30 46 [weight=2, ];
E: 30 47 [weight=5, ];
E: 30 48 [weight=25, ];
E: 30 144 [weight=4, ];
E: 31 37 [weight=1, ];
E: 31 144 [weight=5, ];
E: 32 35 [weight=2, ];
E: 32 37 [weight=8, ];
E: 32 47 [weight=2, ];
E: 32 48 [weight=2, ];
E: 32 57 [weight=2, ];
E: 33 34 [weight=2, ];
E: 33 37 [weight=12, ];
E: 34 35 [weight=1, ];
E: 34 37 [weight=3, ];
E: 34 47 [weight=1, ];
E: 34 48 [weight=1, ];
E: 34 53 [weight=1, ];
E: 35 37 [weight=1, ];
E: 35 44 [weight=1, ];
E: 35 48 [weight=5, ];
E: 35 130 [weight=1, ];
E: 35 134 [weight=1, ];
E: 35 144 [weight=2, ];
E: 36 37 [weight=2, ];
E: 36 47 [weight=1, ];
E: 36 48 [weight=1, ];
E: 36 120 [weight=1, ];
E: 37 45 [weight=1, ];
E: 37 46 [weight=1, ];
E: 37 48 [weight=18, ];
E: 37 135 [weight=1, ];
E: 37 144 [weight=1, ];
E: 38 40 [weight=1, ];
E: 38 45 [weight=1, ];
E: 38 48 [weight=6, ];
E: 39 40 [weight=1, ];
E: 39 48 [weight=4, ];
E: 40 45 [weight=1, ];
E: 40 46 [weight=1, ];
E: 40 48 [weight=4, ];
E: 41 45 [weight=2, ];
E: 41 46 [weight=2, ];
E: 41 47 [weight=2, ];
E: 41 48 [weight=10, ];
E: 42 44 [weight=1, ];
E: 42 45 [weight=1, ];
E: 42 46 [weight=1, ];
E: 42 47 [weight=1, ];
E: 42 48 [weight=5, ];
E: 43 45 [weight=2, ];
E: 43 46 [weight=2, ];
E: 43 47 [weight=2, ];
E: 43 48 [weight=10, ];
E: 44 45 [weight=2, ];
E: 44 46 [weight=2, ];
E: 44 47 [weight=2, ];
E: 44 48 [weight=10, ];
E: 49 50 [weight=2, ];
E: 49 62 [weight=1, ];
E: 49 72 [weight=1, ];
E: 49 96 [weight=1, ];
E: 49 144 [weight=1, ];
E: 50 62 [weight=1, ];
E: 50 72 [weight=1, ];
E: 50 96 [weight=1, ];
E: 50 144 [weight=1, ];
E: 51 130 [weight=2, ];
E: 51 134 [weight=2, ];
E: 51 135 [weight=1, ];
E: 51 144 [weight=5, ];
E: 52 53 [weight=4, ];
E: 52 95 [weight=1, ];
E: 52 96 [weight=4, ];
E: 52 144 [weight=2, ];
E: 53 54 [weight=1, ];
E: 53 138 [weight=1, ];
E: 53 143 [weight=1, ];
E: 53 144 [weight=3, ];
E: 54 152 [weight=1, ];
E: 54 163 [weight=3, ];
E: 55 56 [weight=1, ];
E: 55 57 [weight=1, ];
E: 55 93 [weight=1, ];
E: 55 94 [weight=3, ];
E: 56 57 [weight=4, ];
E: 56 95 [weight=1, ];
E: 56 96 [weight=4, ];
E: 56 144 [weight=2, ];
E: 57 58 [weight=1, ];
E: 57 143 [weight=1, ];
E: 57 144 [weight=3, ];
E: 58 149 [weight=1, ];
E: 58 152 [weight=1, ];
E: 58 163 [weight=3, ];
E: 59 62 [weight=1, ];
E: 59 65 [weight=1, ];
E: 60 62 [weight=1, ];
E: 60 144 [weight=2, ];
E: 61 62 [weight=2, ];
E: 61 144 [weight=2, ];
E: 62 144 [weight=2, ];
E: 63 65 [weight=3, ];
E: 63 96 [weight=2, ];
E: 64 65 [weight=10, ];
E: 64 120 [weight=6, ];
E: 65 143 [weight=1, ];
E: 65 144 [weight=1, ];
E: 65 162 [weight=1, ];
E: 66 68 [weight=2, ];
E: 66 72 [weight=5, ];
E: 66 120 [weight=11, ];
E: 66 144 [weight=8, ];
E: 67 68 [weight=2, ];
E: 67 69 [weight=2, ];
E: 67 72 [weight=2, ];
E: 67 75 [weight=7, ];
E: 67 120 [weight=7, ];
E: 67 144 [weight=4, ];
E: 68 72 [weight=5, ];
E: 68 120 [weight=44, ];
E: 68 134 [weight=1, ];
E: 68 144 [weight=2, ];
E: 69 72 [weight=1, ];
E: 69 75 [weight=2, ];
E: 70 72 [weight=1, ];
E: 70 75 [weight=3, ];
E: 70 144 [weight=2, ];
E: 71 72 [weight=2, ];
E: 71 75 [weight=1, ];
E: 71 144 [weight=2, ];
E: 72 75 [weight=1, ];
E: 72 144 [weight=2, ];
E: 73 75 [weight=4, ];
E: 73 96 [weight=2, ];
E: 74 75 [weight=1, ];
E: 74 138 [weight=2, ];
E: 74 144 [weight=2, ];
E: 75 135 [weight=1, ];
E: 75 144 [weight=1, ];
E: 76 94 [weight=2, ];
E: 76 95 [weight=2, ];
E: 76 111 [weight=6, ];
E: 76 131 [weight=1, ];
E: 77 94 [weight=2, ];
E: 77 95 [weight=2, ];
E: 77 112 [weight=6, ];
E: 77 131 [weight=1, ];
E: 78 80 [weight=1, ];
E: 78 94 [weight=2, ];
E: 78 111 [weight=6, ];
E: 78 112 [weight=1, ];
E: 79 80 [weight=1, ];
E: 79 94 [weight=2, ];
E: 79 111 [weight=2, ];
E: 79 112 [weight=5, ];
E: 80 86 [weight=1, ];
E: 80 94 [weight=2, ];
E: 80 99 [weight=1, ];
E: 80 111 [weight=3, ];
E: 80 112 [weight=1, ];
E: 81 85 [weight=1, ];
E: 81 96 [weight=2, ];
E: 81 113 [weight=1, ];
E: 81 120 [weight=2, ];
E: 81 144 [weight=2, ];
E: 82 83 [weight=1, ];
E: 82 84 [weight=1, ];
E: 82 85 [weight=1, ];
E: 82 96 [weight=3, ];
E: 82 109 [weight=1, ];
E: 82 144 [weight=2, ];
E: 83 96 [weight=2, ];
E: 83 144 [weight=2, ];
E: 84 96 [weight=2, ];
E: 84 144 [weight=2, ];
E: 85 86 [weight=1, ];
E: 85 96 [weight=2, ];
E: 85 144 [weight=2, ];
E: 86 95 [weight=2, ];
E: 86 96 [weight=2, ];
E: 86 144 [weight=2, ];
E: 87 94 [weight=2, ];
E: 87 96 [weight=1, ];
E: 88 94 [weight=2, ];
E: 88 144 [weight=1, ];
E: 89 93 [weight=2, ];
E: 89 94 [weight=4, ];
E: 89 96 [weight=2, ];
E: 89 144 [weight=2, ];
E: 90 92 [weight=1, ];
E: 90 93 [weight=1, ];
E: 90 94 [weight=3, ];
E: 90 96 [weight=1, ];
E: 90 144 [weight=1, ];
E: 91 93 [weight=2, ];
E: 91 94 [weight=4, ];
E: 91 96 [weight=2, ];
E: 91 144 [weight=2, ];
E: 92 93 [weight=2, ];
E: 92 94 [weight=4, ];
E: 92 96 [weight=2, ];
E: 92 144 [weight=2, ];
E: 93 96 [weight=1, ];
E: 93 144 [weight=1, ];
E: 94 96 [weight=1, ];
E: 94 144 [weight=1, ];
E: 95 96 [weight=2, ];
E: 95 144 [weight=2, ];
E: 96 144 [weight=2, ];
E: 97 111 [weight=3, ];
E: 97 124 [weight=1, ];
E: 97 144 [weight=2, ];
E: 98 112 [weight=2, ];
E: 98 144 [weight=2, ];
E: 99 105 [weight=2, ];
E: 99 109 [weight=2, ];
E: 99 111 [weight=6, ];
E: 99 144 [weight=2, ];
E: 100 106 [weight=2, ];
E: 100 110 [weight=2, ];
E: 100 112 [weight=6, ];
E: 100 144 [weight=2, ];
E: 101 111 [weight=4, ];
E: 101 144 [weight=2, ];
E: 102 106 [weight=2, ];
E: 102 110 [weight=2, ];
E: 102 112 [weight=4, ];
E: 102 144 [weight=2, ];
E: 103 111 [weight=5, ];
E: 103 144 [weight=2, ];
E: 104 112 [weight=5, ];
E: 104 144 [weight=2, ];
E: 105 111 [weight=4, ];
E: 105 144 [weight=2, ];
E: 106 112 [weight=4, ];
E: 106 144 [weight=2, ];
E: 107 111 [weight=3, ];
E: 107 144 [weight=2, ];
E: 108 112 [weight=3, ];
E: 108 144 [weight=2, ];
E: 109 111 [weight=2, ];
E: 109 144 [weight=2, ];
E: 110 112 [weight=2, ];
E: 110 144 [weight=2, ];
E: 111 144 [weight=2, ];
E: 112 144 [weight=2, ];
E: 113 114 [weight=10, ];
E: 113 119 [weight=2, ];
E: 113 120 [weight=46, ];
E: 113 144 [weight=4, ];
E: 114 116 [weight=1, ];
E: 114 117 [weight=2, ];
E: 114 120 [weight=3, ];
E: 114 144 [weight=4, ];
E: 115 116 [weight=8, ];
E: 115 119 [weight=6, ];
E: 115 120 [weight=30, ];
E: 115 144 [weight=2, ];
E: 116 120 [weight=6, ];
E: 116 144 [weight=2, ];
E: 117 119 [weight=1, ];
E: 117 120 [weight=2, ];
E: 117 144 [weight=2, ];
E: 118 119 [weight=1, ];
E: 118 120 [weight=1, ];
E: 118 144 [weight=2, ];
E: 119 120 [weight=6, ];
E: 119 144 [weight=2, ];
E: 120 144 [weight=2, ];
E: 121 136 [weight=1, ];
E: 121 144 [weight=2, ];
E: 121 153 [weight=1, ];
E: 121 163 [weight=3, ];
E: 122 123 [weight=1, ];
E: 122 144 [weight=6, ];
E: 123 136 [weight=7, ];
E: 123 144 [weight=15, ];
E: 123 146 [weight=1, ];
E: 123 163 [weight=21, ];
E: 124 125 [weight=1, ];
E: 124 144 [weight=2, ];
E: 125 126 [weight=1, ];
E: 125 133 [weight=1, ];
E: 125 144 [weight=2, ];
E: 126 132 [weight=1, ];
E: 126 133 [weight=2, ];
E: 126 144 [weight=2, ];
E: 127 144 [weight=2, ];
E: 127 147 [weight=1, ];
E: 128 144 [weight=2, ];
E: 128 148 [weight=1, ];
E: 129 144 [weight=2, ];
E: 129 149 [weight=1, ];
E: 130 144 [weight=2, ];
E: 130 151 [weight=1, ];
E: 131 144 [weight=2, ];
E: 132 144 [weight=2, ];
E: 132 150 [weight=1, ];
E: 133 144 [weight=2, ];
E: 134 144 [weight=2, ];
E: 135 143 [weight=1, ];
E: 135 144 [weight=1, ];
E: 135 152 [weight=1, ];
E: 136 143 [weight=8, ];
E: 136 144 [weight=12, ];
E: 136 163 [weight=21, ];
E: 137 144 [weight=2, ];
E: 137 163 [weight=1, ];
E: 138 144 [weight=2, ];
E: 139 143 [weight=2, ];
E: 139 144 [weight=4, ];
E: 139 163 [weight=2, ];
E: 140 142 [weight=1, ];
E: 140 143 [weight=1, ];
E: 140 144 [weight=3, ];
E: 140 163 [weight=1, ];
E: 141 143 [weight=2, ];
E: 141 144 [weight=4, ];
E: 141 163 [weight=2, ];
E: 142 143 [weight=2, ];
E: 142 144 [weight=4, ];
E: 142 163 [weight=2, ];
E: 143 163 [weight=1, ];
E: 144 163 [weight=1, ];
E: 145 162 [weight=1, ];
E: 145 163 [weight=3, ];
E: 146 153 [weight=1, ];
E: 146 163 [weight=2, ];
E: 147 149 [weight=1, ];
E: 147 163 [weight=2, ];
E: 148 151 [weight=1, ];
E: 148 163 [weight=2, ];
E: 149 151 [weight=1, ];
E: 149 163 [weight=2, ];
E: 150 163 [weight=2, ];
E: 151 163 [weight=2, ];
E: 152 162 [weight=1, ];
E: 152 163 [weight=1, ];
E: 153 162 [weight=8, ];
E: 153 163 [weight=12, ];
E: 154 163 [weight=2, ];
E: 155 163 [weight=2, ];
E: 156 163 [weight=2, ];
E: 157 163 [weight=2, ];
E: 158 162 [weight=2, ];
E: 158 163 [weight=4, ];
E: 159 161 [weight=1, ];
E: 159 162 [weight=1, ];
E: 159 163 [weight=3, ];
E: 160 162 [weight=2, ];
E: 160 163 [weight=4, ];
E: 161 162 [weight=2, ];
E: 161 163 [weight=4, ];
